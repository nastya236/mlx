var primitives_8h =
[
    [ "mlx::core::Primitive", "classmlx_1_1core_1_1_primitive.html", "classmlx_1_1core_1_1_primitive" ],
    [ "mlx::core::UnaryPrimitive", "classmlx_1_1core_1_1_unary_primitive.html", "classmlx_1_1core_1_1_unary_primitive" ],
    [ "mlx::core::Abs", "classmlx_1_1core_1_1_abs.html", "classmlx_1_1core_1_1_abs" ],
    [ "mlx::core::Add", "classmlx_1_1core_1_1_add.html", "classmlx_1_1core_1_1_add" ],
    [ "mlx::core::AddMM", "classmlx_1_1core_1_1_add_m_m.html", "classmlx_1_1core_1_1_add_m_m" ],
    [ "mlx::core::Arange", "classmlx_1_1core_1_1_arange.html", "classmlx_1_1core_1_1_arange" ],
    [ "mlx::core::ArcCos", "classmlx_1_1core_1_1_arc_cos.html", "classmlx_1_1core_1_1_arc_cos" ],
    [ "mlx::core::ArcCosh", "classmlx_1_1core_1_1_arc_cosh.html", "classmlx_1_1core_1_1_arc_cosh" ],
    [ "mlx::core::ArcSin", "classmlx_1_1core_1_1_arc_sin.html", "classmlx_1_1core_1_1_arc_sin" ],
    [ "mlx::core::ArcSinh", "classmlx_1_1core_1_1_arc_sinh.html", "classmlx_1_1core_1_1_arc_sinh" ],
    [ "mlx::core::ArcTan", "classmlx_1_1core_1_1_arc_tan.html", "classmlx_1_1core_1_1_arc_tan" ],
    [ "mlx::core::ArcTan2", "classmlx_1_1core_1_1_arc_tan2.html", "classmlx_1_1core_1_1_arc_tan2" ],
    [ "mlx::core::ArcTanh", "classmlx_1_1core_1_1_arc_tanh.html", "classmlx_1_1core_1_1_arc_tanh" ],
    [ "mlx::core::ArgPartition", "classmlx_1_1core_1_1_arg_partition.html", "classmlx_1_1core_1_1_arg_partition" ],
    [ "mlx::core::ArgReduce", "classmlx_1_1core_1_1_arg_reduce.html", "classmlx_1_1core_1_1_arg_reduce" ],
    [ "mlx::core::ArgSort", "classmlx_1_1core_1_1_arg_sort.html", "classmlx_1_1core_1_1_arg_sort" ],
    [ "mlx::core::AsType", "classmlx_1_1core_1_1_as_type.html", "classmlx_1_1core_1_1_as_type" ],
    [ "mlx::core::AsStrided", "classmlx_1_1core_1_1_as_strided.html", "classmlx_1_1core_1_1_as_strided" ],
    [ "mlx::core::BitwiseBinary", "classmlx_1_1core_1_1_bitwise_binary.html", "classmlx_1_1core_1_1_bitwise_binary" ],
    [ "mlx::core::BlockMaskedMM", "classmlx_1_1core_1_1_block_masked_m_m.html", "classmlx_1_1core_1_1_block_masked_m_m" ],
    [ "mlx::core::GatherMM", "classmlx_1_1core_1_1_gather_m_m.html", "classmlx_1_1core_1_1_gather_m_m" ],
    [ "mlx::core::BroadcastAxes", "classmlx_1_1core_1_1_broadcast_axes.html", "classmlx_1_1core_1_1_broadcast_axes" ],
    [ "mlx::core::Broadcast", "classmlx_1_1core_1_1_broadcast.html", "classmlx_1_1core_1_1_broadcast" ],
    [ "mlx::core::Ceil", "classmlx_1_1core_1_1_ceil.html", "classmlx_1_1core_1_1_ceil" ],
    [ "mlx::core::Compiled", "classmlx_1_1core_1_1_compiled.html", "classmlx_1_1core_1_1_compiled" ],
    [ "mlx::core::Concatenate", "classmlx_1_1core_1_1_concatenate.html", "classmlx_1_1core_1_1_concatenate" ],
    [ "mlx::core::Conjugate", "classmlx_1_1core_1_1_conjugate.html", "classmlx_1_1core_1_1_conjugate" ],
    [ "mlx::core::Contiguous", "classmlx_1_1core_1_1_contiguous.html", "classmlx_1_1core_1_1_contiguous" ],
    [ "mlx::core::Convolution", "classmlx_1_1core_1_1_convolution.html", "classmlx_1_1core_1_1_convolution" ],
    [ "mlx::core::Copy", "classmlx_1_1core_1_1_copy.html", "classmlx_1_1core_1_1_copy" ],
    [ "mlx::core::Cos", "classmlx_1_1core_1_1_cos.html", "classmlx_1_1core_1_1_cos" ],
    [ "mlx::core::Cosh", "classmlx_1_1core_1_1_cosh.html", "classmlx_1_1core_1_1_cosh" ],
    [ "mlx::core::CustomTransforms", "classmlx_1_1core_1_1_custom_transforms.html", "classmlx_1_1core_1_1_custom_transforms" ],
    [ "mlx::core::Depends", "classmlx_1_1core_1_1_depends.html", "classmlx_1_1core_1_1_depends" ],
    [ "mlx::core::Divide", "classmlx_1_1core_1_1_divide.html", "classmlx_1_1core_1_1_divide" ],
    [ "mlx::core::DivMod", "classmlx_1_1core_1_1_div_mod.html", "classmlx_1_1core_1_1_div_mod" ],
    [ "mlx::core::Select", "classmlx_1_1core_1_1_select.html", "classmlx_1_1core_1_1_select" ],
    [ "mlx::core::Remainder", "classmlx_1_1core_1_1_remainder.html", "classmlx_1_1core_1_1_remainder" ],
    [ "mlx::core::Equal", "classmlx_1_1core_1_1_equal.html", "classmlx_1_1core_1_1_equal" ],
    [ "mlx::core::Erf", "classmlx_1_1core_1_1_erf.html", "classmlx_1_1core_1_1_erf" ],
    [ "mlx::core::ErfInv", "classmlx_1_1core_1_1_erf_inv.html", "classmlx_1_1core_1_1_erf_inv" ],
    [ "mlx::core::Exp", "classmlx_1_1core_1_1_exp.html", "classmlx_1_1core_1_1_exp" ],
    [ "mlx::core::Expm1", "classmlx_1_1core_1_1_expm1.html", "classmlx_1_1core_1_1_expm1" ],
    [ "mlx::core::ExpandDims", "classmlx_1_1core_1_1_expand_dims.html", "classmlx_1_1core_1_1_expand_dims" ],
    [ "mlx::core::FFT", "classmlx_1_1core_1_1_f_f_t.html", "classmlx_1_1core_1_1_f_f_t" ],
    [ "mlx::core::Flatten", "classmlx_1_1core_1_1_flatten.html", "classmlx_1_1core_1_1_flatten" ],
    [ "mlx::core::Floor", "classmlx_1_1core_1_1_floor.html", "classmlx_1_1core_1_1_floor" ],
    [ "mlx::core::Full", "classmlx_1_1core_1_1_full.html", "classmlx_1_1core_1_1_full" ],
    [ "mlx::core::Gather", "classmlx_1_1core_1_1_gather.html", "classmlx_1_1core_1_1_gather" ],
    [ "mlx::core::Greater", "classmlx_1_1core_1_1_greater.html", "classmlx_1_1core_1_1_greater" ],
    [ "mlx::core::GreaterEqual", "classmlx_1_1core_1_1_greater_equal.html", "classmlx_1_1core_1_1_greater_equal" ],
    [ "mlx::core::Hadamard", "classmlx_1_1core_1_1_hadamard.html", "classmlx_1_1core_1_1_hadamard" ],
    [ "mlx::core::Imag", "classmlx_1_1core_1_1_imag.html", "classmlx_1_1core_1_1_imag" ],
    [ "mlx::core::Less", "classmlx_1_1core_1_1_less.html", "classmlx_1_1core_1_1_less" ],
    [ "mlx::core::LessEqual", "classmlx_1_1core_1_1_less_equal.html", "classmlx_1_1core_1_1_less_equal" ],
    [ "mlx::core::Load", "classmlx_1_1core_1_1_load.html", "classmlx_1_1core_1_1_load" ],
    [ "mlx::core::Log", "classmlx_1_1core_1_1_log.html", "classmlx_1_1core_1_1_log" ],
    [ "mlx::core::Log1p", "classmlx_1_1core_1_1_log1p.html", "classmlx_1_1core_1_1_log1p" ],
    [ "mlx::core::LogicalNot", "classmlx_1_1core_1_1_logical_not.html", "classmlx_1_1core_1_1_logical_not" ],
    [ "mlx::core::LogicalAnd", "classmlx_1_1core_1_1_logical_and.html", "classmlx_1_1core_1_1_logical_and" ],
    [ "mlx::core::LogicalOr", "classmlx_1_1core_1_1_logical_or.html", "classmlx_1_1core_1_1_logical_or" ],
    [ "mlx::core::LogAddExp", "classmlx_1_1core_1_1_log_add_exp.html", "classmlx_1_1core_1_1_log_add_exp" ],
    [ "mlx::core::Matmul", "classmlx_1_1core_1_1_matmul.html", "classmlx_1_1core_1_1_matmul" ],
    [ "mlx::core::Maximum", "classmlx_1_1core_1_1_maximum.html", "classmlx_1_1core_1_1_maximum" ],
    [ "mlx::core::Minimum", "classmlx_1_1core_1_1_minimum.html", "classmlx_1_1core_1_1_minimum" ],
    [ "mlx::core::Multiply", "classmlx_1_1core_1_1_multiply.html", "classmlx_1_1core_1_1_multiply" ],
    [ "mlx::core::Negative", "classmlx_1_1core_1_1_negative.html", "classmlx_1_1core_1_1_negative" ],
    [ "mlx::core::NotEqual", "classmlx_1_1core_1_1_not_equal.html", "classmlx_1_1core_1_1_not_equal" ],
    [ "mlx::core::NumberOfElements", "classmlx_1_1core_1_1_number_of_elements.html", "classmlx_1_1core_1_1_number_of_elements" ],
    [ "mlx::core::Pad", "classmlx_1_1core_1_1_pad.html", "classmlx_1_1core_1_1_pad" ],
    [ "mlx::core::Partition", "classmlx_1_1core_1_1_partition.html", "classmlx_1_1core_1_1_partition" ],
    [ "mlx::core::Power", "classmlx_1_1core_1_1_power.html", "classmlx_1_1core_1_1_power" ],
    [ "mlx::core::QuantizedMatmul", "classmlx_1_1core_1_1_quantized_matmul.html", "classmlx_1_1core_1_1_quantized_matmul" ],
    [ "mlx::core::GatherQMM", "classmlx_1_1core_1_1_gather_q_m_m.html", "classmlx_1_1core_1_1_gather_q_m_m" ],
    [ "mlx::core::RandomBits", "classmlx_1_1core_1_1_random_bits.html", "classmlx_1_1core_1_1_random_bits" ],
    [ "mlx::core::Real", "classmlx_1_1core_1_1_real.html", "classmlx_1_1core_1_1_real" ],
    [ "mlx::core::Reshape", "classmlx_1_1core_1_1_reshape.html", "classmlx_1_1core_1_1_reshape" ],
    [ "mlx::core::Reduce", "classmlx_1_1core_1_1_reduce.html", "classmlx_1_1core_1_1_reduce" ],
    [ "mlx::core::Round", "classmlx_1_1core_1_1_round.html", "classmlx_1_1core_1_1_round" ],
    [ "mlx::core::Scan", "classmlx_1_1core_1_1_scan.html", "classmlx_1_1core_1_1_scan" ],
    [ "mlx::core::Scatter", "classmlx_1_1core_1_1_scatter.html", "classmlx_1_1core_1_1_scatter" ],
    [ "mlx::core::Sigmoid", "classmlx_1_1core_1_1_sigmoid.html", "classmlx_1_1core_1_1_sigmoid" ],
    [ "mlx::core::Sign", "classmlx_1_1core_1_1_sign.html", "classmlx_1_1core_1_1_sign" ],
    [ "mlx::core::Sin", "classmlx_1_1core_1_1_sin.html", "classmlx_1_1core_1_1_sin" ],
    [ "mlx::core::Sinh", "classmlx_1_1core_1_1_sinh.html", "classmlx_1_1core_1_1_sinh" ],
    [ "mlx::core::Slice", "classmlx_1_1core_1_1_slice.html", "classmlx_1_1core_1_1_slice" ],
    [ "mlx::core::SliceUpdate", "classmlx_1_1core_1_1_slice_update.html", "classmlx_1_1core_1_1_slice_update" ],
    [ "mlx::core::DynamicSlice", "classmlx_1_1core_1_1_dynamic_slice.html", "classmlx_1_1core_1_1_dynamic_slice" ],
    [ "mlx::core::DynamicSliceUpdate", "classmlx_1_1core_1_1_dynamic_slice_update.html", "classmlx_1_1core_1_1_dynamic_slice_update" ],
    [ "mlx::core::Softmax", "classmlx_1_1core_1_1_softmax.html", "classmlx_1_1core_1_1_softmax" ],
    [ "mlx::core::Sort", "classmlx_1_1core_1_1_sort.html", "classmlx_1_1core_1_1_sort" ],
    [ "mlx::core::Split", "classmlx_1_1core_1_1_split.html", "classmlx_1_1core_1_1_split" ],
    [ "mlx::core::Square", "classmlx_1_1core_1_1_square.html", "classmlx_1_1core_1_1_square" ],
    [ "mlx::core::Sqrt", "classmlx_1_1core_1_1_sqrt.html", "classmlx_1_1core_1_1_sqrt" ],
    [ "mlx::core::StopGradient", "classmlx_1_1core_1_1_stop_gradient.html", "classmlx_1_1core_1_1_stop_gradient" ],
    [ "mlx::core::Subtract", "classmlx_1_1core_1_1_subtract.html", "classmlx_1_1core_1_1_subtract" ],
    [ "mlx::core::Squeeze", "classmlx_1_1core_1_1_squeeze.html", "classmlx_1_1core_1_1_squeeze" ],
    [ "mlx::core::Tan", "classmlx_1_1core_1_1_tan.html", "classmlx_1_1core_1_1_tan" ],
    [ "mlx::core::Tanh", "classmlx_1_1core_1_1_tanh.html", "classmlx_1_1core_1_1_tanh" ],
    [ "mlx::core::Unflatten", "classmlx_1_1core_1_1_unflatten.html", "classmlx_1_1core_1_1_unflatten" ],
    [ "mlx::core::View", "classmlx_1_1core_1_1_view.html", "classmlx_1_1core_1_1_view" ],
    [ "mlx::core::Transpose", "classmlx_1_1core_1_1_transpose.html", "classmlx_1_1core_1_1_transpose" ],
    [ "mlx::core::QRF", "classmlx_1_1core_1_1_q_r_f.html", "classmlx_1_1core_1_1_q_r_f" ],
    [ "mlx::core::SVD", "classmlx_1_1core_1_1_s_v_d.html", "classmlx_1_1core_1_1_s_v_d" ],
    [ "mlx::core::Inverse", "classmlx_1_1core_1_1_inverse.html", "classmlx_1_1core_1_1_inverse" ],
    [ "mlx::core::Cholesky", "classmlx_1_1core_1_1_cholesky.html", "classmlx_1_1core_1_1_cholesky" ],
    [ "mlx::core::Eigh", "classmlx_1_1core_1_1_eigh.html", "classmlx_1_1core_1_1_eigh" ],
    [ "DEFINE_DEFAULT_IS_EQUIVALENT", "primitives_8h.html#a0fb9d19207dc4869aca35abfbdf4d70a", null ],
    [ "DEFINE_GRADS", "primitives_8h.html#a77abdcb55bc2eb0f9a45edc5ee639bf6", null ],
    [ "DEFINE_INPUT_OUTPUT_SHAPE", "primitives_8h.html#a649a06267b75e007224ea4ddefedb999", null ],
    [ "DEFINE_PRINT", "primitives_8h.html#a1d3a37af519e16f6a703b1e9ebd0f592", null ],
    [ "DEFINE_VMAP", "primitives_8h.html#adc0fbd79fe0d1114dc85da4ed99798bd", null ]
];