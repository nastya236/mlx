var annotated_dup =
[
    [ "metal", "namespacemetal.html", [
      [ "_numeric_limits_impl< bfloat16_t >", "structmetal_1_1__numeric__limits__impl_3_01bfloat16__t_01_4.html", "structmetal_1_1__numeric__limits__impl_3_01bfloat16__t_01_4" ],
      [ "is_empty", "structmetal_1_1is__empty.html", null ],
      [ "is_static", "structmetal_1_1is__static.html", null ],
      [ "make_void", "structmetal_1_1make__void.html", "structmetal_1_1make__void" ],
      [ "pointer_element", "structmetal_1_1pointer__element.html", null ],
      [ "pointer_element< constant T * >", "structmetal_1_1pointer__element.html", "structmetal_1_1pointer__element" ],
      [ "pointer_element< device T * >", "structmetal_1_1pointer__element.html", "structmetal_1_1pointer__element" ],
      [ "pointer_element< thread T * >", "structmetal_1_1pointer__element.html", "structmetal_1_1pointer__element" ],
      [ "pointer_element< threadgroup T * >", "structmetal_1_1pointer__element.html", "structmetal_1_1pointer__element" ]
    ] ],
    [ "mlx", "namespacemlx.html", [
      [ "core", "namespacemlx_1_1core.html", [
        [ "allocator", "namespacemlx_1_1core_1_1allocator.html", [
          [ "Allocator", "classmlx_1_1core_1_1allocator_1_1_allocator.html", "classmlx_1_1core_1_1allocator_1_1_allocator" ],
          [ "Buffer", "classmlx_1_1core_1_1allocator_1_1_buffer.html", "classmlx_1_1core_1_1allocator_1_1_buffer" ],
          [ "CommonAllocator", "classmlx_1_1core_1_1allocator_1_1_common_allocator.html", "classmlx_1_1core_1_1allocator_1_1_common_allocator" ]
        ] ],
        [ "detail", "namespacemlx_1_1core_1_1detail.html", [
          [ "Abs", "structmlx_1_1core_1_1detail_1_1_abs.html", "structmlx_1_1core_1_1detail_1_1_abs" ],
          [ "Add", "structmlx_1_1core_1_1detail_1_1_add.html", "structmlx_1_1core_1_1detail_1_1_add" ],
          [ "ArcCos", "structmlx_1_1core_1_1detail_1_1_arc_cos.html", "structmlx_1_1core_1_1detail_1_1_arc_cos" ],
          [ "ArcCosh", "structmlx_1_1core_1_1detail_1_1_arc_cosh.html", "structmlx_1_1core_1_1detail_1_1_arc_cosh" ],
          [ "ArcSin", "structmlx_1_1core_1_1detail_1_1_arc_sin.html", "structmlx_1_1core_1_1detail_1_1_arc_sin" ],
          [ "ArcSinh", "structmlx_1_1core_1_1detail_1_1_arc_sinh.html", "structmlx_1_1core_1_1detail_1_1_arc_sinh" ],
          [ "ArcTan", "structmlx_1_1core_1_1detail_1_1_arc_tan.html", "structmlx_1_1core_1_1detail_1_1_arc_tan" ],
          [ "ArcTan2", "structmlx_1_1core_1_1detail_1_1_arc_tan2.html", "structmlx_1_1core_1_1detail_1_1_arc_tan2" ],
          [ "ArcTanh", "structmlx_1_1core_1_1detail_1_1_arc_tanh.html", "structmlx_1_1core_1_1detail_1_1_arc_tanh" ],
          [ "BitwiseAnd", "structmlx_1_1core_1_1detail_1_1_bitwise_and.html", "structmlx_1_1core_1_1detail_1_1_bitwise_and" ],
          [ "BitwiseOr", "structmlx_1_1core_1_1detail_1_1_bitwise_or.html", "structmlx_1_1core_1_1detail_1_1_bitwise_or" ],
          [ "BitwiseXor", "structmlx_1_1core_1_1detail_1_1_bitwise_xor.html", "structmlx_1_1core_1_1detail_1_1_bitwise_xor" ],
          [ "Ceil", "structmlx_1_1core_1_1detail_1_1_ceil.html", "structmlx_1_1core_1_1detail_1_1_ceil" ],
          [ "Conjugate", "structmlx_1_1core_1_1detail_1_1_conjugate.html", "structmlx_1_1core_1_1detail_1_1_conjugate" ],
          [ "Cos", "structmlx_1_1core_1_1detail_1_1_cos.html", "structmlx_1_1core_1_1detail_1_1_cos" ],
          [ "Cosh", "structmlx_1_1core_1_1detail_1_1_cosh.html", "structmlx_1_1core_1_1detail_1_1_cosh" ],
          [ "Divide", "structmlx_1_1core_1_1detail_1_1_divide.html", "structmlx_1_1core_1_1detail_1_1_divide" ],
          [ "Equal", "structmlx_1_1core_1_1detail_1_1_equal.html", "structmlx_1_1core_1_1detail_1_1_equal" ],
          [ "Erf", "structmlx_1_1core_1_1detail_1_1_erf.html", "structmlx_1_1core_1_1detail_1_1_erf" ],
          [ "ErfInv", "structmlx_1_1core_1_1detail_1_1_erf_inv.html", "structmlx_1_1core_1_1detail_1_1_erf_inv" ],
          [ "Exp", "structmlx_1_1core_1_1detail_1_1_exp.html", "structmlx_1_1core_1_1detail_1_1_exp" ],
          [ "Expm1", "structmlx_1_1core_1_1detail_1_1_expm1.html", "structmlx_1_1core_1_1detail_1_1_expm1" ],
          [ "Floor", "structmlx_1_1core_1_1detail_1_1_floor.html", "structmlx_1_1core_1_1detail_1_1_floor" ],
          [ "Greater", "structmlx_1_1core_1_1detail_1_1_greater.html", "structmlx_1_1core_1_1detail_1_1_greater" ],
          [ "GreaterEqual", "structmlx_1_1core_1_1detail_1_1_greater_equal.html", "structmlx_1_1core_1_1detail_1_1_greater_equal" ],
          [ "Imag", "structmlx_1_1core_1_1detail_1_1_imag.html", "structmlx_1_1core_1_1detail_1_1_imag" ],
          [ "IntOrFloat", "unionmlx_1_1core_1_1detail_1_1_int_or_float.html", "unionmlx_1_1core_1_1detail_1_1_int_or_float" ],
          [ "InTracing", "structmlx_1_1core_1_1detail_1_1_in_tracing.html", "structmlx_1_1core_1_1detail_1_1_in_tracing" ],
          [ "LeftShift", "structmlx_1_1core_1_1detail_1_1_left_shift.html", "structmlx_1_1core_1_1detail_1_1_left_shift" ],
          [ "Less", "structmlx_1_1core_1_1detail_1_1_less.html", "structmlx_1_1core_1_1detail_1_1_less" ],
          [ "LessEqual", "structmlx_1_1core_1_1detail_1_1_less_equal.html", "structmlx_1_1core_1_1detail_1_1_less_equal" ],
          [ "Log", "structmlx_1_1core_1_1detail_1_1_log.html", "structmlx_1_1core_1_1detail_1_1_log" ],
          [ "Log10", "structmlx_1_1core_1_1detail_1_1_log10.html", "structmlx_1_1core_1_1detail_1_1_log10" ],
          [ "Log1p", "structmlx_1_1core_1_1detail_1_1_log1p.html", "structmlx_1_1core_1_1detail_1_1_log1p" ],
          [ "Log2", "structmlx_1_1core_1_1detail_1_1_log2.html", "structmlx_1_1core_1_1detail_1_1_log2" ],
          [ "LogAddExp", "structmlx_1_1core_1_1detail_1_1_log_add_exp.html", "structmlx_1_1core_1_1detail_1_1_log_add_exp" ],
          [ "LogicalAnd", "structmlx_1_1core_1_1detail_1_1_logical_and.html", "structmlx_1_1core_1_1detail_1_1_logical_and" ],
          [ "LogicalNot", "structmlx_1_1core_1_1detail_1_1_logical_not.html", "structmlx_1_1core_1_1detail_1_1_logical_not" ],
          [ "LogicalOr", "structmlx_1_1core_1_1detail_1_1_logical_or.html", "structmlx_1_1core_1_1detail_1_1_logical_or" ],
          [ "Maximum", "structmlx_1_1core_1_1detail_1_1_maximum.html", "structmlx_1_1core_1_1detail_1_1_maximum" ],
          [ "Minimum", "structmlx_1_1core_1_1detail_1_1_minimum.html", "structmlx_1_1core_1_1detail_1_1_minimum" ],
          [ "Multiply", "structmlx_1_1core_1_1detail_1_1_multiply.html", "structmlx_1_1core_1_1detail_1_1_multiply" ],
          [ "NaNEqual", "structmlx_1_1core_1_1detail_1_1_na_n_equal.html", "structmlx_1_1core_1_1detail_1_1_na_n_equal" ],
          [ "Negative", "structmlx_1_1core_1_1detail_1_1_negative.html", "structmlx_1_1core_1_1detail_1_1_negative" ],
          [ "NotEqual", "structmlx_1_1core_1_1detail_1_1_not_equal.html", "structmlx_1_1core_1_1detail_1_1_not_equal" ],
          [ "Power", "structmlx_1_1core_1_1detail_1_1_power.html", "structmlx_1_1core_1_1detail_1_1_power" ],
          [ "Real", "structmlx_1_1core_1_1detail_1_1_real.html", "structmlx_1_1core_1_1detail_1_1_real" ],
          [ "Remainder", "structmlx_1_1core_1_1detail_1_1_remainder.html", "structmlx_1_1core_1_1detail_1_1_remainder" ],
          [ "RetainGraph", "structmlx_1_1core_1_1detail_1_1_retain_graph.html", "structmlx_1_1core_1_1detail_1_1_retain_graph" ],
          [ "RightShift", "structmlx_1_1core_1_1detail_1_1_right_shift.html", "structmlx_1_1core_1_1detail_1_1_right_shift" ],
          [ "Round", "structmlx_1_1core_1_1detail_1_1_round.html", "structmlx_1_1core_1_1detail_1_1_round" ],
          [ "Rsqrt", "structmlx_1_1core_1_1detail_1_1_rsqrt.html", "structmlx_1_1core_1_1detail_1_1_rsqrt" ],
          [ "Select", "structmlx_1_1core_1_1detail_1_1_select.html", "structmlx_1_1core_1_1detail_1_1_select" ],
          [ "Sigmoid", "structmlx_1_1core_1_1detail_1_1_sigmoid.html", "structmlx_1_1core_1_1detail_1_1_sigmoid" ],
          [ "Sign", "structmlx_1_1core_1_1detail_1_1_sign.html", "structmlx_1_1core_1_1detail_1_1_sign" ],
          [ "Sin", "structmlx_1_1core_1_1detail_1_1_sin.html", "structmlx_1_1core_1_1detail_1_1_sin" ],
          [ "Sinh", "structmlx_1_1core_1_1detail_1_1_sinh.html", "structmlx_1_1core_1_1detail_1_1_sinh" ],
          [ "Sqrt", "structmlx_1_1core_1_1detail_1_1_sqrt.html", "structmlx_1_1core_1_1detail_1_1_sqrt" ],
          [ "Square", "structmlx_1_1core_1_1detail_1_1_square.html", "structmlx_1_1core_1_1detail_1_1_square" ],
          [ "Subtract", "structmlx_1_1core_1_1detail_1_1_subtract.html", "structmlx_1_1core_1_1detail_1_1_subtract" ],
          [ "Tan", "structmlx_1_1core_1_1detail_1_1_tan.html", "structmlx_1_1core_1_1detail_1_1_tan" ],
          [ "Tanh", "structmlx_1_1core_1_1detail_1_1_tanh.html", "structmlx_1_1core_1_1detail_1_1_tanh" ]
        ] ],
        [ "distributed", "namespacemlx_1_1core_1_1distributed.html", [
          [ "detail", "namespacemlx_1_1core_1_1distributed_1_1detail.html", [
            [ "GroupImpl", "classmlx_1_1core_1_1distributed_1_1detail_1_1_group_impl.html", "classmlx_1_1core_1_1distributed_1_1detail_1_1_group_impl" ]
          ] ],
          [ "AllGather", "classmlx_1_1core_1_1distributed_1_1_all_gather.html", "classmlx_1_1core_1_1distributed_1_1_all_gather" ],
          [ "AllReduce", "classmlx_1_1core_1_1distributed_1_1_all_reduce.html", "classmlx_1_1core_1_1distributed_1_1_all_reduce" ],
          [ "DistPrimitive", "classmlx_1_1core_1_1distributed_1_1_dist_primitive.html", "classmlx_1_1core_1_1distributed_1_1_dist_primitive" ],
          [ "Group", "structmlx_1_1core_1_1distributed_1_1_group.html", "structmlx_1_1core_1_1distributed_1_1_group" ],
          [ "Recv", "classmlx_1_1core_1_1distributed_1_1_recv.html", "classmlx_1_1core_1_1distributed_1_1_recv" ],
          [ "Send", "classmlx_1_1core_1_1distributed_1_1_send.html", "classmlx_1_1core_1_1distributed_1_1_send" ]
        ] ],
        [ "fast", "namespacemlx_1_1core_1_1fast.html", [
          [ "AffineQuantize", "classmlx_1_1core_1_1fast_1_1_affine_quantize.html", "classmlx_1_1core_1_1fast_1_1_affine_quantize" ],
          [ "Custom", "classmlx_1_1core_1_1fast_1_1_custom.html", "classmlx_1_1core_1_1fast_1_1_custom" ],
          [ "CustomKernel", "classmlx_1_1core_1_1fast_1_1_custom_kernel.html", "classmlx_1_1core_1_1fast_1_1_custom_kernel" ],
          [ "CustomKernelShapeInfo", "structmlx_1_1core_1_1fast_1_1_custom_kernel_shape_info.html", "structmlx_1_1core_1_1fast_1_1_custom_kernel_shape_info" ],
          [ "LayerNorm", "classmlx_1_1core_1_1fast_1_1_layer_norm.html", "classmlx_1_1core_1_1fast_1_1_layer_norm" ],
          [ "LayerNormVJP", "classmlx_1_1core_1_1fast_1_1_layer_norm_v_j_p.html", "classmlx_1_1core_1_1fast_1_1_layer_norm_v_j_p" ],
          [ "RMSNorm", "classmlx_1_1core_1_1fast_1_1_r_m_s_norm.html", "classmlx_1_1core_1_1fast_1_1_r_m_s_norm" ],
          [ "RMSNormVJP", "classmlx_1_1core_1_1fast_1_1_r_m_s_norm_v_j_p.html", "classmlx_1_1core_1_1fast_1_1_r_m_s_norm_v_j_p" ],
          [ "RoPE", "classmlx_1_1core_1_1fast_1_1_ro_p_e.html", "classmlx_1_1core_1_1fast_1_1_ro_p_e" ],
          [ "ScaledDotProductAttention", "classmlx_1_1core_1_1fast_1_1_scaled_dot_product_attention.html", "classmlx_1_1core_1_1fast_1_1_scaled_dot_product_attention" ]
        ] ],
        [ "io", "namespacemlx_1_1core_1_1io.html", [
          [ "FileWriter", "classmlx_1_1core_1_1io_1_1_file_writer.html", "classmlx_1_1core_1_1io_1_1_file_writer" ],
          [ "ParallelFileReader", "classmlx_1_1core_1_1io_1_1_parallel_file_reader.html", "classmlx_1_1core_1_1io_1_1_parallel_file_reader" ],
          [ "Reader", "classmlx_1_1core_1_1io_1_1_reader.html", "classmlx_1_1core_1_1io_1_1_reader" ],
          [ "Writer", "classmlx_1_1core_1_1io_1_1_writer.html", "classmlx_1_1core_1_1io_1_1_writer" ]
        ] ],
        [ "metal", "namespacemlx_1_1core_1_1metal.html", [
          [ "Buffer", "classmlx_1_1core_1_1metal_1_1_buffer.html", "classmlx_1_1core_1_1metal_1_1_buffer" ],
          [ "CommandEncoder", "structmlx_1_1core_1_1metal_1_1_command_encoder.html", "structmlx_1_1core_1_1metal_1_1_command_encoder" ],
          [ "Device", "classmlx_1_1core_1_1metal_1_1_device.html", "classmlx_1_1core_1_1metal_1_1_device" ],
          [ "DeviceStream", "structmlx_1_1core_1_1metal_1_1_device_stream.html", "structmlx_1_1core_1_1metal_1_1_device_stream" ],
          [ "Fence", "structmlx_1_1core_1_1metal_1_1_fence.html", "structmlx_1_1core_1_1metal_1_1_fence" ],
          [ "MetalAllocator", "classmlx_1_1core_1_1metal_1_1_metal_allocator.html", "classmlx_1_1core_1_1metal_1_1_metal_allocator" ],
          [ "ResidencySet", "classmlx_1_1core_1_1metal_1_1_residency_set.html", "classmlx_1_1core_1_1metal_1_1_residency_set" ]
        ] ],
        [ "random", "namespacemlx_1_1core_1_1random.html", [
          [ "KeySequence", "classmlx_1_1core_1_1random_1_1_key_sequence.html", "classmlx_1_1core_1_1random_1_1_key_sequence" ]
        ] ],
        [ "scheduler", "namespacemlx_1_1core_1_1scheduler.html", [
          [ "Scheduler", "classmlx_1_1core_1_1scheduler_1_1_scheduler.html", "classmlx_1_1core_1_1scheduler_1_1_scheduler" ],
          [ "StreamThread", "structmlx_1_1core_1_1scheduler_1_1_stream_thread.html", "structmlx_1_1core_1_1scheduler_1_1_stream_thread" ]
        ] ],
        [ "_MLX_BFloat16", "structmlx_1_1core_1_1___m_l_x___b_float16.html", "structmlx_1_1core_1_1___m_l_x___b_float16" ],
        [ "_MLX_Float16", "structmlx_1_1core_1_1___m_l_x___float16.html", "structmlx_1_1core_1_1___m_l_x___float16" ],
        [ "Abs", "classmlx_1_1core_1_1_abs.html", "classmlx_1_1core_1_1_abs" ],
        [ "Add", "classmlx_1_1core_1_1_add.html", "classmlx_1_1core_1_1_add" ],
        [ "AddMM", "classmlx_1_1core_1_1_add_m_m.html", "classmlx_1_1core_1_1_add_m_m" ],
        [ "Arange", "classmlx_1_1core_1_1_arange.html", "classmlx_1_1core_1_1_arange" ],
        [ "ArcCos", "classmlx_1_1core_1_1_arc_cos.html", "classmlx_1_1core_1_1_arc_cos" ],
        [ "ArcCosh", "classmlx_1_1core_1_1_arc_cosh.html", "classmlx_1_1core_1_1_arc_cosh" ],
        [ "ArcSin", "classmlx_1_1core_1_1_arc_sin.html", "classmlx_1_1core_1_1_arc_sin" ],
        [ "ArcSinh", "classmlx_1_1core_1_1_arc_sinh.html", "classmlx_1_1core_1_1_arc_sinh" ],
        [ "ArcTan", "classmlx_1_1core_1_1_arc_tan.html", "classmlx_1_1core_1_1_arc_tan" ],
        [ "ArcTan2", "classmlx_1_1core_1_1_arc_tan2.html", "classmlx_1_1core_1_1_arc_tan2" ],
        [ "ArcTanh", "classmlx_1_1core_1_1_arc_tanh.html", "classmlx_1_1core_1_1_arc_tanh" ],
        [ "ArgPartition", "classmlx_1_1core_1_1_arg_partition.html", "classmlx_1_1core_1_1_arg_partition" ],
        [ "ArgReduce", "classmlx_1_1core_1_1_arg_reduce.html", "classmlx_1_1core_1_1_arg_reduce" ],
        [ "ArgSort", "classmlx_1_1core_1_1_arg_sort.html", "classmlx_1_1core_1_1_arg_sort" ],
        [ "array", "classmlx_1_1core_1_1array.html", "classmlx_1_1core_1_1array" ],
        [ "AsStrided", "classmlx_1_1core_1_1_as_strided.html", "classmlx_1_1core_1_1_as_strided" ],
        [ "AsType", "classmlx_1_1core_1_1_as_type.html", "classmlx_1_1core_1_1_as_type" ],
        [ "BitwiseBinary", "classmlx_1_1core_1_1_bitwise_binary.html", "classmlx_1_1core_1_1_bitwise_binary" ],
        [ "BlockMaskedMM", "classmlx_1_1core_1_1_block_masked_m_m.html", "classmlx_1_1core_1_1_block_masked_m_m" ],
        [ "Broadcast", "classmlx_1_1core_1_1_broadcast.html", "classmlx_1_1core_1_1_broadcast" ],
        [ "BroadcastAxes", "classmlx_1_1core_1_1_broadcast_axes.html", "classmlx_1_1core_1_1_broadcast_axes" ],
        [ "Ceil", "classmlx_1_1core_1_1_ceil.html", "classmlx_1_1core_1_1_ceil" ],
        [ "Cholesky", "classmlx_1_1core_1_1_cholesky.html", "classmlx_1_1core_1_1_cholesky" ],
        [ "CommandEncoder", "structmlx_1_1core_1_1_command_encoder.html", "structmlx_1_1core_1_1_command_encoder" ],
        [ "Compiled", "classmlx_1_1core_1_1_compiled.html", "classmlx_1_1core_1_1_compiled" ],
        [ "complex128_t", "structmlx_1_1core_1_1complex128__t.html", "structmlx_1_1core_1_1complex128__t" ],
        [ "complex64_t", "structmlx_1_1core_1_1complex64__t.html", "structmlx_1_1core_1_1complex64__t" ],
        [ "Concatenate", "classmlx_1_1core_1_1_concatenate.html", "classmlx_1_1core_1_1_concatenate" ],
        [ "Conjugate", "classmlx_1_1core_1_1_conjugate.html", "classmlx_1_1core_1_1_conjugate" ],
        [ "Contiguous", "classmlx_1_1core_1_1_contiguous.html", "classmlx_1_1core_1_1_contiguous" ],
        [ "ContiguousIterator", "structmlx_1_1core_1_1_contiguous_iterator.html", "structmlx_1_1core_1_1_contiguous_iterator" ],
        [ "Convolution", "classmlx_1_1core_1_1_convolution.html", "classmlx_1_1core_1_1_convolution" ],
        [ "Copy", "classmlx_1_1core_1_1_copy.html", "classmlx_1_1core_1_1_copy" ],
        [ "Cos", "classmlx_1_1core_1_1_cos.html", "classmlx_1_1core_1_1_cos" ],
        [ "Cosh", "classmlx_1_1core_1_1_cosh.html", "classmlx_1_1core_1_1_cosh" ],
        [ "CustomTransforms", "classmlx_1_1core_1_1_custom_transforms.html", "classmlx_1_1core_1_1_custom_transforms" ],
        [ "DefaultContiguousReduce", "structmlx_1_1core_1_1_default_contiguous_reduce.html", "structmlx_1_1core_1_1_default_contiguous_reduce" ],
        [ "DefaultStridedReduce", "structmlx_1_1core_1_1_default_strided_reduce.html", "structmlx_1_1core_1_1_default_strided_reduce" ],
        [ "Depends", "classmlx_1_1core_1_1_depends.html", "classmlx_1_1core_1_1_depends" ],
        [ "Device", "structmlx_1_1core_1_1_device.html", "structmlx_1_1core_1_1_device" ],
        [ "Divide", "classmlx_1_1core_1_1_divide.html", "classmlx_1_1core_1_1_divide" ],
        [ "DivMod", "classmlx_1_1core_1_1_div_mod.html", "classmlx_1_1core_1_1_div_mod" ],
        [ "Dtype", "structmlx_1_1core_1_1_dtype.html", "structmlx_1_1core_1_1_dtype" ],
        [ "DynamicSlice", "classmlx_1_1core_1_1_dynamic_slice.html", "classmlx_1_1core_1_1_dynamic_slice" ],
        [ "DynamicSliceUpdate", "classmlx_1_1core_1_1_dynamic_slice_update.html", "classmlx_1_1core_1_1_dynamic_slice_update" ],
        [ "Eigh", "classmlx_1_1core_1_1_eigh.html", "classmlx_1_1core_1_1_eigh" ],
        [ "Equal", "classmlx_1_1core_1_1_equal.html", "classmlx_1_1core_1_1_equal" ],
        [ "Erf", "classmlx_1_1core_1_1_erf.html", "classmlx_1_1core_1_1_erf" ],
        [ "ErfInv", "classmlx_1_1core_1_1_erf_inv.html", "classmlx_1_1core_1_1_erf_inv" ],
        [ "Event", "classmlx_1_1core_1_1_event.html", "classmlx_1_1core_1_1_event" ],
        [ "Exp", "classmlx_1_1core_1_1_exp.html", "classmlx_1_1core_1_1_exp" ],
        [ "ExpandDims", "classmlx_1_1core_1_1_expand_dims.html", "classmlx_1_1core_1_1_expand_dims" ],
        [ "Expm1", "classmlx_1_1core_1_1_expm1.html", "classmlx_1_1core_1_1_expm1" ],
        [ "FFT", "classmlx_1_1core_1_1_f_f_t.html", "classmlx_1_1core_1_1_f_f_t" ],
        [ "finfo", "structmlx_1_1core_1_1finfo.html", "structmlx_1_1core_1_1finfo" ],
        [ "Flatten", "classmlx_1_1core_1_1_flatten.html", "classmlx_1_1core_1_1_flatten" ],
        [ "Floor", "classmlx_1_1core_1_1_floor.html", "classmlx_1_1core_1_1_floor" ],
        [ "Full", "classmlx_1_1core_1_1_full.html", "classmlx_1_1core_1_1_full" ],
        [ "FunctionExporter", "structmlx_1_1core_1_1_function_exporter.html", "structmlx_1_1core_1_1_function_exporter" ],
        [ "Gather", "classmlx_1_1core_1_1_gather.html", "classmlx_1_1core_1_1_gather" ],
        [ "GatherMM", "classmlx_1_1core_1_1_gather_m_m.html", "classmlx_1_1core_1_1_gather_m_m" ],
        [ "GatherQMM", "classmlx_1_1core_1_1_gather_q_m_m.html", "classmlx_1_1core_1_1_gather_q_m_m" ],
        [ "Greater", "classmlx_1_1core_1_1_greater.html", "classmlx_1_1core_1_1_greater" ],
        [ "GreaterEqual", "classmlx_1_1core_1_1_greater_equal.html", "classmlx_1_1core_1_1_greater_equal" ],
        [ "Hadamard", "classmlx_1_1core_1_1_hadamard.html", "classmlx_1_1core_1_1_hadamard" ],
        [ "Imag", "classmlx_1_1core_1_1_imag.html", "classmlx_1_1core_1_1_imag" ],
        [ "ImportedFunction", "structmlx_1_1core_1_1_imported_function.html", "structmlx_1_1core_1_1_imported_function" ],
        [ "Inverse", "classmlx_1_1core_1_1_inverse.html", "classmlx_1_1core_1_1_inverse" ],
        [ "JitCompiler", "classmlx_1_1core_1_1_jit_compiler.html", "classmlx_1_1core_1_1_jit_compiler" ],
        [ "Less", "classmlx_1_1core_1_1_less.html", "classmlx_1_1core_1_1_less" ],
        [ "LessEqual", "classmlx_1_1core_1_1_less_equal.html", "classmlx_1_1core_1_1_less_equal" ],
        [ "Load", "classmlx_1_1core_1_1_load.html", "classmlx_1_1core_1_1_load" ],
        [ "Log", "classmlx_1_1core_1_1_log.html", "classmlx_1_1core_1_1_log" ],
        [ "Log1p", "classmlx_1_1core_1_1_log1p.html", "classmlx_1_1core_1_1_log1p" ],
        [ "LogAddExp", "classmlx_1_1core_1_1_log_add_exp.html", "classmlx_1_1core_1_1_log_add_exp" ],
        [ "LogicalAnd", "classmlx_1_1core_1_1_logical_and.html", "classmlx_1_1core_1_1_logical_and" ],
        [ "LogicalNot", "classmlx_1_1core_1_1_logical_not.html", "classmlx_1_1core_1_1_logical_not" ],
        [ "LogicalOr", "classmlx_1_1core_1_1_logical_or.html", "classmlx_1_1core_1_1_logical_or" ],
        [ "Matmul", "classmlx_1_1core_1_1_matmul.html", "classmlx_1_1core_1_1_matmul" ],
        [ "Maximum", "classmlx_1_1core_1_1_maximum.html", "classmlx_1_1core_1_1_maximum" ],
        [ "Minimum", "classmlx_1_1core_1_1_minimum.html", "classmlx_1_1core_1_1_minimum" ],
        [ "Multiply", "classmlx_1_1core_1_1_multiply.html", "classmlx_1_1core_1_1_multiply" ],
        [ "Negative", "classmlx_1_1core_1_1_negative.html", "classmlx_1_1core_1_1_negative" ],
        [ "NodeNamer", "structmlx_1_1core_1_1_node_namer.html", "structmlx_1_1core_1_1_node_namer" ],
        [ "NotEqual", "classmlx_1_1core_1_1_not_equal.html", "classmlx_1_1core_1_1_not_equal" ],
        [ "NumberOfElements", "classmlx_1_1core_1_1_number_of_elements.html", "classmlx_1_1core_1_1_number_of_elements" ],
        [ "numeric_limits", "structmlx_1_1core_1_1numeric__limits.html", null ],
        [ "numeric_limits< bfloat16_t >", "structmlx_1_1core_1_1numeric__limits.html", "structmlx_1_1core_1_1numeric__limits" ],
        [ "numeric_limits< float >", "structmlx_1_1core_1_1numeric__limits.html", null ],
        [ "numeric_limits< float16_t >", "structmlx_1_1core_1_1numeric__limits.html", "structmlx_1_1core_1_1numeric__limits" ],
        [ "Pad", "classmlx_1_1core_1_1_pad.html", "classmlx_1_1core_1_1_pad" ],
        [ "Partition", "classmlx_1_1core_1_1_partition.html", "classmlx_1_1core_1_1_partition" ],
        [ "Power", "classmlx_1_1core_1_1_power.html", "classmlx_1_1core_1_1_power" ],
        [ "Primitive", "classmlx_1_1core_1_1_primitive.html", "classmlx_1_1core_1_1_primitive" ],
        [ "PrintFormatter", "structmlx_1_1core_1_1_print_formatter.html", "structmlx_1_1core_1_1_print_formatter" ],
        [ "QRF", "classmlx_1_1core_1_1_q_r_f.html", "classmlx_1_1core_1_1_q_r_f" ],
        [ "QuantizedMatmul", "classmlx_1_1core_1_1_quantized_matmul.html", "classmlx_1_1core_1_1_quantized_matmul" ],
        [ "RandomBits", "classmlx_1_1core_1_1_random_bits.html", "classmlx_1_1core_1_1_random_bits" ],
        [ "Real", "classmlx_1_1core_1_1_real.html", "classmlx_1_1core_1_1_real" ],
        [ "Reduce", "classmlx_1_1core_1_1_reduce.html", "classmlx_1_1core_1_1_reduce" ],
        [ "ReductionPlan", "structmlx_1_1core_1_1_reduction_plan.html", "structmlx_1_1core_1_1_reduction_plan" ],
        [ "Remainder", "classmlx_1_1core_1_1_remainder.html", "classmlx_1_1core_1_1_remainder" ],
        [ "Reshape", "classmlx_1_1core_1_1_reshape.html", "classmlx_1_1core_1_1_reshape" ],
        [ "Round", "classmlx_1_1core_1_1_round.html", "classmlx_1_1core_1_1_round" ],
        [ "Scan", "classmlx_1_1core_1_1_scan.html", "classmlx_1_1core_1_1_scan" ],
        [ "Scatter", "classmlx_1_1core_1_1_scatter.html", "classmlx_1_1core_1_1_scatter" ],
        [ "Select", "classmlx_1_1core_1_1_select.html", "classmlx_1_1core_1_1_select" ],
        [ "Sigmoid", "classmlx_1_1core_1_1_sigmoid.html", "classmlx_1_1core_1_1_sigmoid" ],
        [ "Sign", "classmlx_1_1core_1_1_sign.html", "classmlx_1_1core_1_1_sign" ],
        [ "Sin", "classmlx_1_1core_1_1_sin.html", "classmlx_1_1core_1_1_sin" ],
        [ "Sinh", "classmlx_1_1core_1_1_sinh.html", "classmlx_1_1core_1_1_sinh" ],
        [ "Slice", "classmlx_1_1core_1_1_slice.html", "classmlx_1_1core_1_1_slice" ],
        [ "SliceUpdate", "classmlx_1_1core_1_1_slice_update.html", "classmlx_1_1core_1_1_slice_update" ],
        [ "Softmax", "classmlx_1_1core_1_1_softmax.html", "classmlx_1_1core_1_1_softmax" ],
        [ "Sort", "classmlx_1_1core_1_1_sort.html", "classmlx_1_1core_1_1_sort" ],
        [ "Split", "classmlx_1_1core_1_1_split.html", "classmlx_1_1core_1_1_split" ],
        [ "Sqrt", "classmlx_1_1core_1_1_sqrt.html", "classmlx_1_1core_1_1_sqrt" ],
        [ "Square", "classmlx_1_1core_1_1_square.html", "classmlx_1_1core_1_1_square" ],
        [ "Squeeze", "classmlx_1_1core_1_1_squeeze.html", "classmlx_1_1core_1_1_squeeze" ],
        [ "StopGradient", "classmlx_1_1core_1_1_stop_gradient.html", "classmlx_1_1core_1_1_stop_gradient" ],
        [ "Stream", "structmlx_1_1core_1_1_stream.html", "structmlx_1_1core_1_1_stream" ],
        [ "StreamContext", "structmlx_1_1core_1_1_stream_context.html", "structmlx_1_1core_1_1_stream_context" ],
        [ "Subtract", "classmlx_1_1core_1_1_subtract.html", "classmlx_1_1core_1_1_subtract" ],
        [ "SVD", "classmlx_1_1core_1_1_s_v_d.html", "classmlx_1_1core_1_1_s_v_d" ],
        [ "Tan", "classmlx_1_1core_1_1_tan.html", "classmlx_1_1core_1_1_tan" ],
        [ "Tanh", "classmlx_1_1core_1_1_tanh.html", "classmlx_1_1core_1_1_tanh" ],
        [ "Transpose", "classmlx_1_1core_1_1_transpose.html", "classmlx_1_1core_1_1_transpose" ],
        [ "TypeToDtype", "structmlx_1_1core_1_1_type_to_dtype.html", "structmlx_1_1core_1_1_type_to_dtype" ],
        [ "UnaryPrimitive", "classmlx_1_1core_1_1_unary_primitive.html", "classmlx_1_1core_1_1_unary_primitive" ],
        [ "Unflatten", "classmlx_1_1core_1_1_unflatten.html", "classmlx_1_1core_1_1_unflatten" ],
        [ "View", "classmlx_1_1core_1_1_view.html", "classmlx_1_1core_1_1_view" ]
      ] ],
      [ "steel", "namespacemlx_1_1steel.html", [
        [ "AccumHelper", "structmlx_1_1steel_1_1_accum_helper.html", "structmlx_1_1steel_1_1_accum_helper" ],
        [ "AttnParams", "structmlx_1_1steel_1_1_attn_params.html", "structmlx_1_1steel_1_1_attn_params" ],
        [ "BaseMMAFrag", "structmlx_1_1steel_1_1_base_m_m_a_frag.html", null ],
        [ "BaseMMAFrag< T, 8, 8 >", "structmlx_1_1steel_1_1_base_m_m_a_frag.html", "structmlx_1_1steel_1_1_base_m_m_a_frag" ],
        [ "BlockLoader", "structmlx_1_1steel_1_1_block_loader.html", "structmlx_1_1steel_1_1_block_loader" ],
        [ "BlockLoaderT", "structmlx_1_1steel_1_1_block_loader_t.html", "structmlx_1_1steel_1_1_block_loader_t" ],
        [ "BlockMMA", "structmlx_1_1steel_1_1_block_m_m_a.html", "structmlx_1_1steel_1_1_block_m_m_a" ],
        [ "BlockSwizzle", "structmlx_1_1steel_1_1_block_swizzle.html", "structmlx_1_1steel_1_1_block_swizzle" ],
        [ "ChannelHelper", "structmlx_1_1steel_1_1_channel_helper.html", "structmlx_1_1steel_1_1_channel_helper" ],
        [ "ChannelHelper< 1 >", "structmlx_1_1steel_1_1_channel_helper.html", "structmlx_1_1steel_1_1_channel_helper" ],
        [ "ChannelHelper< 2 >", "structmlx_1_1steel_1_1_channel_helper.html", "structmlx_1_1steel_1_1_channel_helper" ],
        [ "ChannelHelper< 3 >", "structmlx_1_1steel_1_1_channel_helper.html", "structmlx_1_1steel_1_1_channel_helper" ],
        [ "ChannelHelper< 4 >", "structmlx_1_1steel_1_1_channel_helper.html", "structmlx_1_1steel_1_1_channel_helper" ],
        [ "Conv2DGeneralBaseInfo", "structmlx_1_1steel_1_1_conv2_d_general_base_info.html", "structmlx_1_1steel_1_1_conv2_d_general_base_info" ],
        [ "Conv2DGeneralJumpParams", "structmlx_1_1steel_1_1_conv2_d_general_jump_params.html", "structmlx_1_1steel_1_1_conv2_d_general_jump_params" ],
        [ "Conv2DInputBlockLoaderGeneral", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_general.html", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_general" ],
        [ "Conv2DInputBlockLoaderLargeFilter", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_large_filter.html", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_large_filter" ],
        [ "Conv2DInputBlockLoaderSmallChannels", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_small_channels.html", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_small_channels" ],
        [ "Conv2DInputBlockLoaderSmallFilter", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_small_filter.html", "structmlx_1_1steel_1_1_conv2_d_input_block_loader_small_filter" ],
        [ "Conv2DWeightBlockLoader", "structmlx_1_1steel_1_1_conv2_d_weight_block_loader.html", "structmlx_1_1steel_1_1_conv2_d_weight_block_loader" ],
        [ "Conv2DWeightBlockLoaderGeneral", "structmlx_1_1steel_1_1_conv2_d_weight_block_loader_general.html", "structmlx_1_1steel_1_1_conv2_d_weight_block_loader_general" ],
        [ "Conv2DWeightBlockLoaderSmallChannels", "structmlx_1_1steel_1_1_conv2_d_weight_block_loader_small_channels.html", "structmlx_1_1steel_1_1_conv2_d_weight_block_loader_small_channels" ],
        [ "CShape", "structmlx_1_1steel_1_1_c_shape.html", "structmlx_1_1steel_1_1_c_shape" ],
        [ "GEMMAddMMParams", "structmlx_1_1steel_1_1_g_e_m_m_add_m_m_params.html", "structmlx_1_1steel_1_1_g_e_m_m_add_m_m_params" ],
        [ "GEMMKernel", "structmlx_1_1steel_1_1_g_e_m_m_kernel.html", "structmlx_1_1steel_1_1_g_e_m_m_kernel" ],
        [ "GEMMParams", "structmlx_1_1steel_1_1_g_e_m_m_params.html", "structmlx_1_1steel_1_1_g_e_m_m_params" ],
        [ "GEMMSpiltKParams", "structmlx_1_1steel_1_1_g_e_m_m_spilt_k_params.html", "structmlx_1_1steel_1_1_g_e_m_m_spilt_k_params" ],
        [ "ImplicitGemmConv2DParams", "structmlx_1_1steel_1_1_implicit_gemm_conv2_d_params.html", "structmlx_1_1steel_1_1_implicit_gemm_conv2_d_params" ],
        [ "integral_constant", "structmlx_1_1steel_1_1integral__constant.html", "structmlx_1_1steel_1_1integral__constant" ],
        [ "is_integral", "structmlx_1_1steel_1_1is__integral.html", null ],
        [ "is_integral< integral_constant< T, v > >", "structmlx_1_1steel_1_1is__integral.html", null ],
        [ "Layout2D", "structmlx_1_1steel_1_1_layout2_d.html", "structmlx_1_1steel_1_1_layout2_d" ],
        [ "LoopAlignment", "structmlx_1_1steel_1_1_loop_alignment.html", null ],
        [ "MMATile", "structmlx_1_1steel_1_1_m_m_a_tile.html", "structmlx_1_1steel_1_1_m_m_a_tile" ],
        [ "Shape2D", "structmlx_1_1steel_1_1_shape2_d.html", "structmlx_1_1steel_1_1_shape2_d" ],
        [ "TransformAdd", "structmlx_1_1steel_1_1_transform_add.html", "structmlx_1_1steel_1_1_transform_add" ],
        [ "TransformAxpby", "structmlx_1_1steel_1_1_transform_axpby.html", "structmlx_1_1steel_1_1_transform_axpby" ],
        [ "TransformNone", "structmlx_1_1steel_1_1_transform_none.html", "structmlx_1_1steel_1_1_transform_none" ]
      ] ]
    ] ],
    [ "pocketfft", "namespacepocketfft.html", [
      [ "detail", "namespacepocketfft_1_1detail.html", [
        [ "threading", "namespacepocketfft_1_1detail_1_1threading.html", [
          [ "aligned_allocator", "structpocketfft_1_1detail_1_1threading_1_1aligned__allocator.html", "structpocketfft_1_1detail_1_1threading_1_1aligned__allocator" ],
          [ "concurrent_queue", "classpocketfft_1_1detail_1_1threading_1_1concurrent__queue.html", "classpocketfft_1_1detail_1_1threading_1_1concurrent__queue" ],
          [ "latch", "classpocketfft_1_1detail_1_1threading_1_1latch.html", "classpocketfft_1_1detail_1_1threading_1_1latch" ],
          [ "thread_pool", "classpocketfft_1_1detail_1_1threading_1_1thread__pool.html", "classpocketfft_1_1detail_1_1threading_1_1thread__pool" ]
        ] ],
        [ "add_vec", "structpocketfft_1_1detail_1_1add__vec.html", "structpocketfft_1_1detail_1_1add__vec" ],
        [ "add_vec< cmplx< T > >", "structpocketfft_1_1detail_1_1add__vec.html", "structpocketfft_1_1detail_1_1add__vec" ],
        [ "arr", "classpocketfft_1_1detail_1_1arr.html", "classpocketfft_1_1detail_1_1arr" ],
        [ "arr_info", "classpocketfft_1_1detail_1_1arr__info.html", "classpocketfft_1_1detail_1_1arr__info" ],
        [ "cfftp", "classpocketfft_1_1detail_1_1cfftp.html", "classpocketfft_1_1detail_1_1cfftp" ],
        [ "cmplx", "structpocketfft_1_1detail_1_1cmplx.html", "structpocketfft_1_1detail_1_1cmplx" ],
        [ "cndarr", "classpocketfft_1_1detail_1_1cndarr.html", "classpocketfft_1_1detail_1_1cndarr" ],
        [ "ExecC2C", "structpocketfft_1_1detail_1_1_exec_c2_c.html", "structpocketfft_1_1detail_1_1_exec_c2_c" ],
        [ "ExecDcst", "structpocketfft_1_1detail_1_1_exec_dcst.html", "structpocketfft_1_1detail_1_1_exec_dcst" ],
        [ "ExecHartley", "structpocketfft_1_1detail_1_1_exec_hartley.html", "structpocketfft_1_1detail_1_1_exec_hartley" ],
        [ "ExecR2R", "structpocketfft_1_1detail_1_1_exec_r2_r.html", "structpocketfft_1_1detail_1_1_exec_r2_r" ],
        [ "fftblue", "classpocketfft_1_1detail_1_1fftblue.html", "classpocketfft_1_1detail_1_1fftblue" ],
        [ "multi_iter", "classpocketfft_1_1detail_1_1multi__iter.html", "classpocketfft_1_1detail_1_1multi__iter" ],
        [ "ndarr", "classpocketfft_1_1detail_1_1ndarr.html", "classpocketfft_1_1detail_1_1ndarr" ],
        [ "pocketfft_c", "classpocketfft_1_1detail_1_1pocketfft__c.html", "classpocketfft_1_1detail_1_1pocketfft__c" ],
        [ "pocketfft_r", "classpocketfft_1_1detail_1_1pocketfft__r.html", "classpocketfft_1_1detail_1_1pocketfft__r" ],
        [ "rev_iter", "classpocketfft_1_1detail_1_1rev__iter.html", "classpocketfft_1_1detail_1_1rev__iter" ],
        [ "rfftp", "classpocketfft_1_1detail_1_1rfftp.html", "classpocketfft_1_1detail_1_1rfftp" ],
        [ "simple_iter", "classpocketfft_1_1detail_1_1simple__iter.html", "classpocketfft_1_1detail_1_1simple__iter" ],
        [ "sincos_2pibyn", "classpocketfft_1_1detail_1_1sincos__2pibyn.html", "classpocketfft_1_1detail_1_1sincos__2pibyn" ],
        [ "T_dcst23", "classpocketfft_1_1detail_1_1_t__dcst23.html", "classpocketfft_1_1detail_1_1_t__dcst23" ],
        [ "T_dcst4", "classpocketfft_1_1detail_1_1_t__dcst4.html", "classpocketfft_1_1detail_1_1_t__dcst4" ],
        [ "T_dct1", "classpocketfft_1_1detail_1_1_t__dct1.html", "classpocketfft_1_1detail_1_1_t__dct1" ],
        [ "T_dst1", "classpocketfft_1_1detail_1_1_t__dst1.html", "classpocketfft_1_1detail_1_1_t__dst1" ],
        [ "util", "structpocketfft_1_1detail_1_1util.html", "structpocketfft_1_1detail_1_1util" ],
        [ "VLEN", "structpocketfft_1_1detail_1_1_v_l_e_n.html", "structpocketfft_1_1detail_1_1_v_l_e_n" ],
        [ "VTYPE", "structpocketfft_1_1detail_1_1_v_t_y_p_e.html", null ]
      ] ]
    ] ],
    [ "_MLX_BFloat16", "struct___m_l_x___b_float16.html", "struct___m_l_x___b_float16" ],
    [ "_NoMask", "struct___no_mask.html", "struct___no_mask" ],
    [ "Abs", "struct_abs.html", "struct_abs" ],
    [ "Add", "struct_add.html", "struct_add" ],
    [ "And", "struct_and.html", null ],
    [ "ArcCos", "struct_arc_cos.html", "struct_arc_cos" ],
    [ "ArcCosh", "struct_arc_cosh.html", "struct_arc_cosh" ],
    [ "ArcSin", "struct_arc_sin.html", "struct_arc_sin" ],
    [ "ArcSinh", "struct_arc_sinh.html", "struct_arc_sinh" ],
    [ "ArcTan", "struct_arc_tan.html", "struct_arc_tan" ],
    [ "ArcTan2", "struct_arc_tan2.html", "struct_arc_tan2" ],
    [ "ArcTanh", "struct_arc_tanh.html", "struct_arc_tanh" ],
    [ "BitwiseAnd", "struct_bitwise_and.html", "struct_bitwise_and" ],
    [ "BitwiseOr", "struct_bitwise_or.html", "struct_bitwise_or" ],
    [ "BitwiseXor", "struct_bitwise_xor.html", "struct_bitwise_xor" ],
    [ "BlockMergeSort", "struct_block_merge_sort.html", "struct_block_merge_sort" ],
    [ "bool4_or_uint", "unionbool4__or__uint.html", "unionbool4__or__uint" ],
    [ "Ceil", "struct_ceil.html", "struct_ceil" ],
    [ "complex64_t", "structcomplex64__t.html", "structcomplex64__t" ],
    [ "ConditionalType", "struct_conditional_type.html", "struct_conditional_type" ],
    [ "ConditionalType< true, T, U >", "struct_conditional_type.html", "struct_conditional_type" ],
    [ "Conjugate", "struct_conjugate.html", "struct_conjugate" ],
    [ "Cos", "struct_cos.html", "struct_cos" ],
    [ "Cosh", "struct_cosh.html", "struct_cosh" ],
    [ "CumMax", "struct_cum_max.html", "struct_cum_max" ],
    [ "CumMin", "struct_cum_min.html", "struct_cum_min" ],
    [ "CumProd", "struct_cum_prod.html", null ],
    [ "CumProd< bool >", "struct_cum_prod.html", "struct_cum_prod" ],
    [ "CumSum", "struct_cum_sum.html", null ],
    [ "Divide", "struct_divide.html", "struct_divide" ],
    [ "DivMod", "struct_div_mod.html", "struct_div_mod" ],
    [ "DivOp", "struct_div_op.html", "struct_div_op" ],
    [ "Equal", "struct_equal.html", "struct_equal" ],
    [ "Erf", "struct_erf.html", "struct_erf" ],
    [ "ErfInv", "struct_erf_inv.html", "struct_erf_inv" ],
    [ "Exp", "struct_exp.html", "struct_exp" ],
    [ "Expm1", "struct_expm1.html", "struct_expm1" ],
    [ "ExpSubOp", "struct_exp_sub_op.html", "struct_exp_sub_op" ],
    [ "Floor", "struct_floor.html", "struct_floor" ],
    [ "FloorDivide", "struct_floor_divide.html", "struct_floor_divide" ],
    [ "GEMVKernel", "struct_g_e_m_v_kernel.html", "struct_g_e_m_v_kernel" ],
    [ "GEMVTKernel", "struct_g_e_m_v_t_kernel.html", "struct_g_e_m_v_t_kernel" ],
    [ "Greater", "struct_greater.html", "struct_greater" ],
    [ "GreaterEqual", "struct_greater_equal.html", "struct_greater_equal" ],
    [ "Imag", "struct_imag.html", "struct_imag" ],
    [ "Indices", "struct_indices.html", "struct_indices" ],
    [ "KernelMergeSort", "struct_kernel_merge_sort.html", "struct_kernel_merge_sort" ],
    [ "KernelMultiBlockMergeSort", "struct_kernel_multi_block_merge_sort.html", "struct_kernel_multi_block_merge_sort" ],
    [ "LeftShift", "struct_left_shift.html", "struct_left_shift" ],
    [ "Less", "struct_less.html", "struct_less" ],
    [ "LessEqual", "struct_less_equal.html", "struct_less_equal" ],
    [ "LessThan", "struct_less_than.html", "struct_less_than" ],
    [ "Limits", "struct_limits.html", "struct_limits" ],
    [ "Limits< bfloat16_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< bool >", "struct_limits.html", "struct_limits" ],
    [ "Limits< complex64_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< float >", "struct_limits.html", "struct_limits" ],
    [ "Limits< half >", "struct_limits.html", "struct_limits" ],
    [ "Limits< int16_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< int32_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< int64_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< int8_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< uint16_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< uint32_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< uint64_t >", "struct_limits.html", "struct_limits" ],
    [ "Limits< uint8_t >", "struct_limits.html", "struct_limits" ],
    [ "Log", "struct_log.html", "struct_log" ],
    [ "Log10", "struct_log10.html", "struct_log10" ],
    [ "Log1p", "struct_log1p.html", "struct_log1p" ],
    [ "Log2", "struct_log2.html", "struct_log2" ],
    [ "LogAddExp", "struct_log_add_exp.html", "struct_log_add_exp" ],
    [ "LogicalAnd", "struct_logical_and.html", "struct_logical_and" ],
    [ "LogicalNot", "struct_logical_not.html", "struct_logical_not" ],
    [ "LogicalOr", "struct_logical_or.html", "struct_logical_or" ],
    [ "LoopedElemToLoc", "struct_looped_elem_to_loc.html", "struct_looped_elem_to_loc" ],
    [ "LoopedElemToLoc< 1, OffsetT, false >", "struct_looped_elem_to_loc.html", "struct_looped_elem_to_loc" ],
    [ "LoopedElemToLoc< 1, OffsetT, true >", "struct_looped_elem_to_loc.html", "struct_looped_elem_to_loc" ],
    [ "Max", "struct_max.html", "struct_max" ],
    [ "Maximum", "struct_maximum.html", "struct_maximum" ],
    [ "MaxOp", "struct_max_op.html", "struct_max_op" ],
    [ "Min", "struct_min.html", null ],
    [ "Minimum", "struct_minimum.html", "struct_minimum" ],
    [ "mlx_atomic", "structmlx__atomic.html", "structmlx__atomic" ],
    [ "mlx_atomic< T, enable_if_t< is_metal_atomic< T > > >", "structmlx__atomic.html", "structmlx__atomic" ],
    [ "MLXConvParams", "struct_m_l_x_conv_params.html", "struct_m_l_x_conv_params" ],
    [ "MulOp", "struct_mul_op.html", "struct_mul_op" ],
    [ "Multiply", "struct_multiply.html", "struct_multiply" ],
    [ "NaNEqual", "struct_na_n_equal.html", "struct_na_n_equal" ],
    [ "Negative", "struct_negative.html", "struct_negative" ],
    [ "None", "struct_none.html", "struct_none" ],
    [ "NotEqual", "struct_not_equal.html", "struct_not_equal" ],
    [ "Or", "struct_or.html", null ],
    [ "Power", "struct_power.html", "struct_power" ],
    [ "Prod", "struct_prod.html", null ],
    [ "QuantizedBlockLoader", "struct_quantized_block_loader.html", "struct_quantized_block_loader" ],
    [ "ReadWriter", "struct_read_writer.html", "struct_read_writer" ],
    [ "Real", "struct_real.html", "struct_real" ],
    [ "Remainder", "struct_remainder.html", "struct_remainder" ],
    [ "RightShift", "struct_right_shift.html", "struct_right_shift" ],
    [ "Round", "struct_round.html", "struct_round" ],
    [ "Rsqrt", "struct_rsqrt.html", "struct_rsqrt" ],
    [ "ScaleOp", "struct_scale_op.html", "struct_scale_op" ],
    [ "Select", "struct_select.html", "struct_select" ],
    [ "Sigmoid", "struct_sigmoid.html", "struct_sigmoid" ],
    [ "Sign", "struct_sign.html", "struct_sign" ],
    [ "Sin", "struct_sin.html", "struct_sin" ],
    [ "Sinh", "struct_sinh.html", "struct_sinh" ],
    [ "Sqrt", "struct_sqrt.html", "struct_sqrt" ],
    [ "Square", "struct_square.html", "struct_square" ],
    [ "SubOp", "struct_sub_op.html", "struct_sub_op" ],
    [ "Subtract", "struct_subtract.html", "struct_subtract" ],
    [ "Sum", "struct_sum.html", null ],
    [ "SumOp", "struct_sum_op.html", "struct_sum_op" ],
    [ "Tan", "struct_tan.html", "struct_tan" ],
    [ "Tanh", "struct_tanh.html", "struct_tanh" ],
    [ "ThreadPool", "class_thread_pool.html", "class_thread_pool" ],
    [ "ThreadSort", "struct_thread_sort.html", "struct_thread_sort" ],
    [ "TransformScale", "struct_transform_scale.html", "struct_transform_scale" ]
];